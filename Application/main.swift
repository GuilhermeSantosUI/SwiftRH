var departments: [Department] = []
var employees: [Employee] = []

var option: String?

repeat {
    print("\n=== MENU ===")
    print("[1] - Listar Departamentos")
    print("[2] - Cadastrar Departamento")
    print("[3] - Listar Funcion√°rios")
    print("[4] - Cadastrar Funcion√°rio")
    print("[0] - Fechar")
    print("Escolha uma op√ß√£o:")

    option = readLine()

    switch option {
    case "1":
        print("üìÇ Departamentos:")
        if departments.isEmpty {
            print("Nenhum departamento cadastrado.")
        } else {
            for (i, dept) in departments.enumerated() {
                print("[\(i)] - \(dept.name)")
            }
        }

    case "2":
        print("Digite o nome do departamento:")
        if let name = readLine(), !name.isEmpty {
            departments.append(Department(name: name))
            print("‚úÖ Departamento '\(name)' cadastrado com sucesso!")
        } else {
            print("‚ùå Nome inv√°lido.")
        }

    case "3":
        print("üë®‚Äçüíº Funcion√°rios:")
        if employees.isEmpty {
            print("Nenhum funcion√°rio cadastrado.")
        } else {
            for emp in employees {
                print(emp.toString())
            }
        }

    case "4":
        if departments.isEmpty {
            print("‚ö†Ô∏è Cadastre um departamento antes de adicionar funcion√°rios.")
            break
        }

        print("Nome:")
        guard let name = readLine(), !name.isEmpty else { print("Nome inv√°lido"); break }

        print("Idade:")
        guard let ageStr = readLine(), let age = Int(ageStr) else { print("Idade inv√°lida"); break }

        print("Email:")
        guard let email = readLine(), !email.isEmpty else { print("Email inv√°lido"); break }

        print("Sal√°rio:")
        guard let salaryStr = readLine(), let salary = Double(salaryStr) else { print("Sal√°rio inv√°lido"); break }

        print("Selecione o n√∫mero do departamento:")
        for (i, dept) in departments.enumerated() {
            print("[\(i)] - \(dept.name)")
        }

        guard let deptIndexStr = readLine(),
              let deptIndex = Int(deptIndexStr),
              departments.indices.contains(deptIndex) else {
            print("Departamento inv√°lido")
            break
        }

        let dept = departments[deptIndex]
        let emp = Employee(name: name, age: age, email: email, department: dept, salary: salary)
        employees.append(emp)
        print("‚úÖ Funcion√°rio '\(name)' cadastrado!")

    case "0":
        print("üëã Encerrando...")

    default:
        print("‚ùå Op√ß√£o inv√°lida")
    }

} while option != "0"
